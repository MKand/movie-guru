# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-create-gcs
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
  _REGION: europe-west4
  _SHORT_SHA: ${SHORT_SHA}

steps:
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-create-gcs"
  entrypoint: bash
  args:
    - -c
    - |
      [[ "${_INFRA}" == "false" ]] && exit 0
      ([[ $(gsutil ls | grep "gs://${_PROJECT_ID}/") ]] || \
      gsutil mb -p ${PROJECT_ID} gs://${_PROJECT_ID}) && \
      ([[ $(gsutil versioning get gs://${_PROJECT_ID} | grep Enabled) ]] || \
      gsutil versioning set on gs://${_PROJECT_ID})

- name: "hashicorp/terraform:1.8.2"
  id: "create-artifact-registry"
  entrypoint: "sh"
  dir: "deploy/terraform/artifact-registry"
  args:
    - -c
    - |
      [[ "${_INFRA}" == "false" ]] && exit 0
      terraform init -backend-config="bucket=${_PROJECT_ID}"
      terraform apply -var="project_id=${_PROJECT_ID}" --auto-approve
    - -xe

- name: 'gcr.io/cloud-builders/docker'
  dir: './chat_server_go'
  entrypoint: "sh"
  args:
    - -xe 
    - -c
    - |
      docker build \
         -t "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/movie-guru-golang/chatserver:${_SHORT_SHA}" \
         -t "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/movie-guru-golang/chatserver:latest" \
         --cache-from "${_REGION}-docker.pkg.dev/${_PROJECT_ID}/movie-guru-golang/chatserver:latest" \
         .

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: "sh"
  args:
    - -xe 
    - -c
    - |
      docker push '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/movie-guru-golang/chatserver:${_SHORT_SHA}'

- name: "hashicorp/terraform:1.8.2"
  id: "create-server-infra"
  entrypoint: "sh"
  dir: "deploy/terraform/go-server-infra"
  args:
    - -xe
    - -c
    - |
      terraform init -backend-config="bucket=${_PROJECT_ID}"
      terraform apply -var=deploy_app=${_APP} -var="project_id=${_PROJECT_ID}" -var="app_version=${_APP_VERSION}" -var="image_tag=${_SHORT_SHA}" -var="region=${_REGION}" --auto-approve