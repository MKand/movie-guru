apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: {{.Chart.Name }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - name: server
        image: "{{ .Values.Config.Image.Repository }}/movie-guru-server:ghack-sre"
        command: ["/app/webserver"]
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_HOST
          value: db-service
        - name: PROJECT_ID
          value: {{ .Values.Config.projectID }}
        - name: POSTGRES_DB_USER_PASSWORD
          value: "minimal"
        - name: POSTGRES_DB_USER
          value: "minimal-user"
        - name: POSTGRES_DB_NAME
          value: "fake-movies-db"
        - name: TABLE_NAME
          value: "movies"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          value: "my_redis_pwd"
        - name: REDIS_HOST
          value: "cache-service"
        - name: FLOWS_URL
          value: "http://flows-service.movie-guru.svc.cluster.local:3401"
        - name: LOCATION
          value: {{ .Values.Config.geminiApiLocation }}
        - name: SIMPLE
          value: "true"
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://otel-collector.otel-collector.svc.cluster.local:4318
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: {{.Chart.Name }}
spec:
  selector:
    app: server 
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 8080
  type: LoadBalancer